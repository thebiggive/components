version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0.0
  docker: circleci/docker@2.1.2
  jira: circleci/jira@1.3.1

defaults: &defaults
  working_directory: ~/components
  docker:
    - image: thebiggive/donate-frontend-ci:latest
      auth:
        username: $DOCKER_HUB_USERNAME
        password: $DOCKER_HUB_ACCESS_TOKEN

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm run lint
      - run: npm run test

  deploy-staging-storybook:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install --quiet
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Build components
          command: npm run build
      - run:
          name: Build Storybook
          command: npm run build-storybook
      - aws-s3/sync:
          from: src/assets
          to: 's3://tbg-staging-component-library/assets'
          arguments: |
            --acl public-read \
            --cache-control "max-age=3600"
      - aws-s3/sync:
          from: storybook-static
          to: 's3://tbg-staging-component-library'
          arguments: |
            --acl public-read \
            --cache-control "max-age=3600"

  deploy-production-storybook:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install --quiet
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Build components
          command: npm run build
      - run:
          name: Build Storybook
          command: npm run build-storybook
      - aws-s3/sync:
          from: src/assets
          to: 's3://tbg-production-component-library/assets'
          arguments: |
            --acl public-read \
            --cache-control "max-age=3600"
      - aws-s3/sync:
          from: storybook-static
          to: 's3://tbg-production-component-library'
          arguments: |
            --acl public-read \
            --cache-control "max-age=3600"

  # Publishes `@biggive/components` *and* `@biggive/components-angular` (building both on the fly).
  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm run build
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_PUBLISH_AUTH_TOKEN" > ~/components/.npmrc
      - run:
          name: Publish core components to npm
          command: npm publish --access=public
      - run: cd angular && npm install
      - run:
          name: Build Angular components
          command: cd angular && npm run build
      - run:
          name: Authenticate with registry in Angular components output directory
          command: echo "//registry.npmjs.org/:_authToken=$NPM_PUBLISH_AUTH_TOKEN" > ~/components/angular/dist/components/.npmrc
      - run:
          name: Publish Angular components to npm
          command: cd angular/dist/components && npm publish --access=public

workflows:
  version: 2
  build:
    jobs:
      - build:
          context:
            - docker-hub-creds
            - jira
          post-steps:
            - jira/notify:
                job_type: build
                environment_type: development
  publish:
    jobs:
      - publish:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - docker-hub-creds
            - jira
            - npm-publish
          post-steps:
            - jira/notify:
                job_type: deployment
                environment_type: production
  deploy-storybook:
    jobs:
      # *Any* push to `main` deploys a new Storybook Staging preview.
      - deploy-staging-storybook:
          filters:
            branches:
              only:
                - main
          context:
            - docker-hub-creds
            - ecs-deploys # Includes S3 stuff used by Donate frontend.
            - jira
          post-steps:
            - jira/notify:
                job_type: deployment
                environment_type: staging
      # *Tag* pushes to `main` (the same conditions for a new version `npm` publish)
      # deploy a new Storybook Production build.
      - deploy-production-storybook:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - docker-hub-creds
            - ecs-deploys # Includes S3 stuff used by Donate frontend.
            - jira
          post-steps:
            - jira/notify:
                job_type: deployment
                environment_type: production
