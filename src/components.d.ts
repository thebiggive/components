/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BiggiveBackToTop {
    }
    interface BiggiveBasicCard {
        /**
          * Full URL of the background image.
         */
        "backgroundColour": string;
        /**
          * Full URL of the background image.
         */
        "backgroundImageUrl": string;
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme": string;
        /**
          * Button label
         */
        "buttonLabel": string;
        /**
          * Button URL
         */
        "buttonUrl": string;
        /**
          * Icon colour
         */
        "iconColour": string;
        /**
          * Main title
         */
        "mainTitle": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Subtitle title
         */
        "subtitle": string;
    }
    interface BiggiveBeneficiaryIcon {
    }
    interface BiggiveBoxedContent {
        /**
          * Background colour
         */
        "backgroundColour": string;
        /**
          * Horizontal padding
         */
        "horizontalPadding": number;
        /**
          * Shadow
         */
        "shadow": boolean;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Vertical padding
         */
        "verticalPadding": number;
    }
    interface BiggiveBrandedImage {
        /**
          * Full URL of a image.
         */
        "imageUrl": string;
        /**
          * Full URL of the logo.
         */
        "logoUrl": string;
        /**
          * Slug
         */
        "slug": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveButton {
        /**
          * Colour Scheme
         */
        "colourScheme": string;
        /**
          * Display full width
         */
        "fullWidth": boolean;
        /**
          * Text
         */
        "label": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * URL
         */
        "url": string;
    }
    interface BiggiveCallToAction {
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Main title
         */
        "mainTitle": string;
        /**
          * Main title colour
         */
        "mainTitleColour": string;
        /**
          * Primary button Colour Scheme
         */
        "primaryButtonColourScheme": string;
        /**
          * Primary button Label
         */
        "primaryButtonLabel": string;
        /**
          * Primary button Url
         */
        "primaryButtonUrl": string;
        /**
          * Secondary button Colour Scheme
         */
        "secondaryButtonColourScheme": string;
        /**
          * Secondary button Label
         */
        "secondaryButtonLabel": string;
        /**
          * Secondary button Url
         */
        "secondaryButtonUrl": string;
        /**
          * Slug
         */
        "slug": string;
        /**
          * Slug colour
         */
        "slugColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Subtitle
         */
        "subtitle": string;
        /**
          * Subtitle colour
         */
        "subtitleColour": string;
        /**
          * Teaser
         */
        "teaser": string;
        /**
          * Teaser colour
         */
        "teaserColour": string;
    }
    interface BiggiveCampaignCard {
        /**
          * Full URL of a banner image.
         */
        "banner": string;
        /**
          * Display name of the charity's specific time-bound fundraising campaign.
         */
        "campaignTitle": string;
        /**
          * e.g. "Match Funded".
         */
        "campaignType": string;
        /**
          * e.g. 'GBP'.
         */
        "currencyCode": string;
        /**
          * Donate button colour scheme
         */
        "donateButtonColourScheme": string;
        /**
          * Donate button label
         */
        "donateButtonLabel": string;
        /**
          * Donate button url
         */
        "donateButtonUrl": string;
        /**
          * Donate button colour scheme
         */
        "moreInfoButtonColourScheme": string;
        /**
          * More information button label
         */
        "moreInfoButtonLabel": string;
        /**
          * More information button url
         */
        "moreInfoButtonUrl": string;
        /**
          * Display name of the charity or non-profit.
         */
        "organisationName": string;
        /**
          * Amount for the primary figure
         */
        "primaryFigureAmount": number;
        /**
          * Label for the primary figure
         */
        "primaryFigureLabel": string;
        /**
          * Progress bar percentage
         */
        "progressBarCounter": number;
        /**
          * Amount for the secondary figure
         */
        "secondaryFigureAmount": number;
        /**
          * Label for the secondary figure
         */
        "secondaryFigureLabel": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveCampaignCardFilterGrid {
        /**
          * Defines the text on the search button
         */
        "buttonText": string;
        /**
          * Intro
         */
        "intro": string;
        /**
          * Defines the text displayed as the placeholder in the input field before the user types anything
         */
        "placeholderText": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveCampaignHighlights {
        /**
          * e.g. 'GBP'.
         */
        "currencyCode": string;
        /**
          * Amount for the primary figure
         */
        "primaryFigureAmount": number;
        /**
          * Label for the primary figure
         */
        "primaryFigureLabel": string;
        /**
          * Primary stat icon
         */
        "primaryStatIcon": string;
        /**
          * Primary stat text
         */
        "primaryStatText": string;
        /**
          * Progress bar percentage
         */
        "progressBarCounter": number;
        /**
          * Amount for the secondary figure
         */
        "secondaryFigureAmount": number;
        /**
          * Label for the secondary figure
         */
        "secondaryFigureLabel": string;
        /**
          * Secondary stat icon
         */
        "secondaryStatIcon": string;
        /**
          * Secondary stat text
         */
        "secondaryStatText": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveCategoryIcon {
        /**
          * Background colour
         */
        "backgroundColour": string;
        /**
          * Icon
         */
        "icon": string;
        /**
          * Background colour
         */
        "iconColour": string;
        /**
          * Label
         */
        "label": string;
        /**
          * Url
         */
        "url": string;
    }
    interface BiggiveFooter {
    }
    interface BiggiveForm {
    }
    interface BiggiveFormFieldSelect {
    }
    interface BiggiveFormattedText {
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveGrid {
        /**
          * Number of columns in grid
         */
        "columnCount": number;
        /**
          * Gap between columns, based on spacer CSS variable
         */
        "columnGap": number;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveHeader {
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveHeading {
        /**
          * Colour Scheme
         */
        "colour": string;
        /**
          * HTML element
         */
        "htmlElement": string;
        /**
          * Heading size
         */
        "size": number;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Heading text
         */
        "text": string;
    }
    interface BiggiveHeroImage {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme": string;
        /**
          * Button Label
         */
        "buttonLabel": string;
        /**
          * Button Url
         */
        "buttonUrl": string;
        /**
          * Colour Scheme
         */
        "colourScheme": string;
        /**
          * Full URL of a logo image.
         */
        "logo": string;
        /**
          * Full URL of a main hero image.
         */
        "mainImage": string;
        /**
          * Hero image title, typically the page.
         */
        "mainTitle": string;
        /**
          * Main title colour
         */
        "mainTitleColour": string;
        /**
          * Header slug
         */
        "slug": string;
        /**
          * Header slug colour
         */
        "slugColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Introductory teaser text
         */
        "teaser": string;
        /**
          * Teaser colour
         */
        "teaserColour": string;
    }
    interface BiggiveIconGroup {
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveImage {
        /**
          * Full URL of a image.
         */
        "imageUrl": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveImageFeature {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme": string;
        /**
          * Button Label
         */
        "buttonLabel": string;
        /**
          * Button Url
         */
        "buttonUrl": string;
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Full URL of a image.
         */
        "imageUrl": string;
        /**
          * Video title
         */
        "mainTitle": string;
        /**
          * Slug colour
         */
        "mainTitleColour": string;
        /**
          * Slug
         */
        "slug": string;
        /**
          * Slug colour
         */
        "slugColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Introductory teaser text
         */
        "teaser": string;
        /**
          * Teaser colour
         */
        "teaserColour": string;
    }
    interface BiggiveMiscIcon {
        /**
          * Background colour
         */
        "backgroundColour": string;
        /**
          * Icon
         */
        "icon": string;
        /**
          * Background colour
         */
        "iconColour": string;
        /**
          * Url
         */
        "url": string;
    }
    interface BiggivePageColumn {
    }
    interface BiggivePageColumns {
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggivePageSection {
        /**
          * Colour scheme
         */
        "colourScheme": string;
        /**
          * Section style bottom
         */
        "sectionStyleBottom": string;
        /**
          * Section style top
         */
        "sectionStyleTop": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveProgressBar {
        /**
          * Colour Scheme
         */
        "colourScheme": string;
        /**
          * Text
         */
        "counter": number;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveQuote {
        /**
          * Attribution text
         */
        "attribution": string;
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Quote text
         */
        "quote": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveSearch {
        /**
          * Defines the text on the search button
         */
        "buttonText": string;
        /**
          * Defines the text displayed as the placeholder in the input field before the user types anything
         */
        "placeholderText": string;
    }
    interface BiggiveSocialIcon {
        /**
          * Background colour
         */
        "backgroundColour": string;
        /**
          * Background colour
         */
        "iconColour": string;
        /**
          * service
         */
        "service": string;
        /**
          * Url
         */
        "url": string;
    }
    interface BiggiveTab {
        /**
          * Title
         */
        "tabTitle": string;
    }
    interface BiggiveTabbedContent {
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
    }
    interface BiggiveTextInput {
    }
    interface BiggiveTotalizer {
        /**
          * e.g. 'GBP'.
         */
        "currencyCode": string;
        /**
          * Include GiftAid
         */
        "includingGiftAid": boolean;
        /**
          * Primary banner colour
         */
        "primaryColour": string;
        /**
          * Primary text colour
         */
        "primaryTextColour": string;
        /**
          * Secondary banner colour
         */
        "secondaryColour": string;
        /**
          * Secondary text colour
         */
        "secondaryTextColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Total match funds.
         */
        "totalMatchFunds": number;
        /**
          * Total raised.
         */
        "totalRaised": number;
    }
    interface BiggiveVideo {
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Full URL of a video.
         */
        "videoUrl": string;
    }
    interface BiggiveVideoFeature {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme": string;
        /**
          * Button Label
         */
        "buttonLabel": string;
        /**
          * Button Url
         */
        "buttonUrl": string;
        /**
          * Default text colour
         */
        "defaultTextColour": string;
        /**
          * Video title
         */
        "mainTitle": string;
        /**
          * Slug colour
         */
        "mainTitleColour": string;
        /**
          * Slug
         */
        "slug": string;
        /**
          * Slug colour
         */
        "slugColour": string;
        /**
          * Space below component
         */
        "spaceBelow": number;
        /**
          * Introductory teaser text
         */
        "teaser": string;
        /**
          * Teaser colour
         */
        "teaserColour": string;
        /**
          * Full URL of a video.
         */
        "videoUrl": string;
    }
}
export interface BiggiveCampaignCardFilterGridCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLBiggiveCampaignCardFilterGridElement;
}
export interface BiggiveSearchCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLBiggiveSearchElement;
}
declare global {
    interface HTMLBiggiveBackToTopElement extends Components.BiggiveBackToTop, HTMLStencilElement {
    }
    var HTMLBiggiveBackToTopElement: {
        prototype: HTMLBiggiveBackToTopElement;
        new (): HTMLBiggiveBackToTopElement;
    };
    interface HTMLBiggiveBasicCardElement extends Components.BiggiveBasicCard, HTMLStencilElement {
    }
    var HTMLBiggiveBasicCardElement: {
        prototype: HTMLBiggiveBasicCardElement;
        new (): HTMLBiggiveBasicCardElement;
    };
    interface HTMLBiggiveBeneficiaryIconElement extends Components.BiggiveBeneficiaryIcon, HTMLStencilElement {
    }
    var HTMLBiggiveBeneficiaryIconElement: {
        prototype: HTMLBiggiveBeneficiaryIconElement;
        new (): HTMLBiggiveBeneficiaryIconElement;
    };
    interface HTMLBiggiveBoxedContentElement extends Components.BiggiveBoxedContent, HTMLStencilElement {
    }
    var HTMLBiggiveBoxedContentElement: {
        prototype: HTMLBiggiveBoxedContentElement;
        new (): HTMLBiggiveBoxedContentElement;
    };
    interface HTMLBiggiveBrandedImageElement extends Components.BiggiveBrandedImage, HTMLStencilElement {
    }
    var HTMLBiggiveBrandedImageElement: {
        prototype: HTMLBiggiveBrandedImageElement;
        new (): HTMLBiggiveBrandedImageElement;
    };
    interface HTMLBiggiveButtonElement extends Components.BiggiveButton, HTMLStencilElement {
    }
    var HTMLBiggiveButtonElement: {
        prototype: HTMLBiggiveButtonElement;
        new (): HTMLBiggiveButtonElement;
    };
    interface HTMLBiggiveCallToActionElement extends Components.BiggiveCallToAction, HTMLStencilElement {
    }
    var HTMLBiggiveCallToActionElement: {
        prototype: HTMLBiggiveCallToActionElement;
        new (): HTMLBiggiveCallToActionElement;
    };
    interface HTMLBiggiveCampaignCardElement extends Components.BiggiveCampaignCard, HTMLStencilElement {
    }
    var HTMLBiggiveCampaignCardElement: {
        prototype: HTMLBiggiveCampaignCardElement;
        new (): HTMLBiggiveCampaignCardElement;
    };
    interface HTMLBiggiveCampaignCardFilterGridElement extends Components.BiggiveCampaignCardFilterGrid, HTMLStencilElement {
    }
    var HTMLBiggiveCampaignCardFilterGridElement: {
        prototype: HTMLBiggiveCampaignCardFilterGridElement;
        new (): HTMLBiggiveCampaignCardFilterGridElement;
    };
    interface HTMLBiggiveCampaignHighlightsElement extends Components.BiggiveCampaignHighlights, HTMLStencilElement {
    }
    var HTMLBiggiveCampaignHighlightsElement: {
        prototype: HTMLBiggiveCampaignHighlightsElement;
        new (): HTMLBiggiveCampaignHighlightsElement;
    };
    interface HTMLBiggiveCategoryIconElement extends Components.BiggiveCategoryIcon, HTMLStencilElement {
    }
    var HTMLBiggiveCategoryIconElement: {
        prototype: HTMLBiggiveCategoryIconElement;
        new (): HTMLBiggiveCategoryIconElement;
    };
    interface HTMLBiggiveFooterElement extends Components.BiggiveFooter, HTMLStencilElement {
    }
    var HTMLBiggiveFooterElement: {
        prototype: HTMLBiggiveFooterElement;
        new (): HTMLBiggiveFooterElement;
    };
    interface HTMLBiggiveFormElement extends Components.BiggiveForm, HTMLStencilElement {
    }
    var HTMLBiggiveFormElement: {
        prototype: HTMLBiggiveFormElement;
        new (): HTMLBiggiveFormElement;
    };
    interface HTMLBiggiveFormFieldSelectElement extends Components.BiggiveFormFieldSelect, HTMLStencilElement {
    }
    var HTMLBiggiveFormFieldSelectElement: {
        prototype: HTMLBiggiveFormFieldSelectElement;
        new (): HTMLBiggiveFormFieldSelectElement;
    };
    interface HTMLBiggiveFormattedTextElement extends Components.BiggiveFormattedText, HTMLStencilElement {
    }
    var HTMLBiggiveFormattedTextElement: {
        prototype: HTMLBiggiveFormattedTextElement;
        new (): HTMLBiggiveFormattedTextElement;
    };
    interface HTMLBiggiveGridElement extends Components.BiggiveGrid, HTMLStencilElement {
    }
    var HTMLBiggiveGridElement: {
        prototype: HTMLBiggiveGridElement;
        new (): HTMLBiggiveGridElement;
    };
    interface HTMLBiggiveHeaderElement extends Components.BiggiveHeader, HTMLStencilElement {
    }
    var HTMLBiggiveHeaderElement: {
        prototype: HTMLBiggiveHeaderElement;
        new (): HTMLBiggiveHeaderElement;
    };
    interface HTMLBiggiveHeadingElement extends Components.BiggiveHeading, HTMLStencilElement {
    }
    var HTMLBiggiveHeadingElement: {
        prototype: HTMLBiggiveHeadingElement;
        new (): HTMLBiggiveHeadingElement;
    };
    interface HTMLBiggiveHeroImageElement extends Components.BiggiveHeroImage, HTMLStencilElement {
    }
    var HTMLBiggiveHeroImageElement: {
        prototype: HTMLBiggiveHeroImageElement;
        new (): HTMLBiggiveHeroImageElement;
    };
    interface HTMLBiggiveIconGroupElement extends Components.BiggiveIconGroup, HTMLStencilElement {
    }
    var HTMLBiggiveIconGroupElement: {
        prototype: HTMLBiggiveIconGroupElement;
        new (): HTMLBiggiveIconGroupElement;
    };
    interface HTMLBiggiveImageElement extends Components.BiggiveImage, HTMLStencilElement {
    }
    var HTMLBiggiveImageElement: {
        prototype: HTMLBiggiveImageElement;
        new (): HTMLBiggiveImageElement;
    };
    interface HTMLBiggiveImageFeatureElement extends Components.BiggiveImageFeature, HTMLStencilElement {
    }
    var HTMLBiggiveImageFeatureElement: {
        prototype: HTMLBiggiveImageFeatureElement;
        new (): HTMLBiggiveImageFeatureElement;
    };
    interface HTMLBiggiveMiscIconElement extends Components.BiggiveMiscIcon, HTMLStencilElement {
    }
    var HTMLBiggiveMiscIconElement: {
        prototype: HTMLBiggiveMiscIconElement;
        new (): HTMLBiggiveMiscIconElement;
    };
    interface HTMLBiggivePageColumnElement extends Components.BiggivePageColumn, HTMLStencilElement {
    }
    var HTMLBiggivePageColumnElement: {
        prototype: HTMLBiggivePageColumnElement;
        new (): HTMLBiggivePageColumnElement;
    };
    interface HTMLBiggivePageColumnsElement extends Components.BiggivePageColumns, HTMLStencilElement {
    }
    var HTMLBiggivePageColumnsElement: {
        prototype: HTMLBiggivePageColumnsElement;
        new (): HTMLBiggivePageColumnsElement;
    };
    interface HTMLBiggivePageSectionElement extends Components.BiggivePageSection, HTMLStencilElement {
    }
    var HTMLBiggivePageSectionElement: {
        prototype: HTMLBiggivePageSectionElement;
        new (): HTMLBiggivePageSectionElement;
    };
    interface HTMLBiggiveProgressBarElement extends Components.BiggiveProgressBar, HTMLStencilElement {
    }
    var HTMLBiggiveProgressBarElement: {
        prototype: HTMLBiggiveProgressBarElement;
        new (): HTMLBiggiveProgressBarElement;
    };
    interface HTMLBiggiveQuoteElement extends Components.BiggiveQuote, HTMLStencilElement {
    }
    var HTMLBiggiveQuoteElement: {
        prototype: HTMLBiggiveQuoteElement;
        new (): HTMLBiggiveQuoteElement;
    };
    interface HTMLBiggiveSearchElement extends Components.BiggiveSearch, HTMLStencilElement {
    }
    var HTMLBiggiveSearchElement: {
        prototype: HTMLBiggiveSearchElement;
        new (): HTMLBiggiveSearchElement;
    };
    interface HTMLBiggiveSocialIconElement extends Components.BiggiveSocialIcon, HTMLStencilElement {
    }
    var HTMLBiggiveSocialIconElement: {
        prototype: HTMLBiggiveSocialIconElement;
        new (): HTMLBiggiveSocialIconElement;
    };
    interface HTMLBiggiveTabElement extends Components.BiggiveTab, HTMLStencilElement {
    }
    var HTMLBiggiveTabElement: {
        prototype: HTMLBiggiveTabElement;
        new (): HTMLBiggiveTabElement;
    };
    interface HTMLBiggiveTabbedContentElement extends Components.BiggiveTabbedContent, HTMLStencilElement {
    }
    var HTMLBiggiveTabbedContentElement: {
        prototype: HTMLBiggiveTabbedContentElement;
        new (): HTMLBiggiveTabbedContentElement;
    };
    interface HTMLBiggiveTextInputElement extends Components.BiggiveTextInput, HTMLStencilElement {
    }
    var HTMLBiggiveTextInputElement: {
        prototype: HTMLBiggiveTextInputElement;
        new (): HTMLBiggiveTextInputElement;
    };
    interface HTMLBiggiveTotalizerElement extends Components.BiggiveTotalizer, HTMLStencilElement {
    }
    var HTMLBiggiveTotalizerElement: {
        prototype: HTMLBiggiveTotalizerElement;
        new (): HTMLBiggiveTotalizerElement;
    };
    interface HTMLBiggiveVideoElement extends Components.BiggiveVideo, HTMLStencilElement {
    }
    var HTMLBiggiveVideoElement: {
        prototype: HTMLBiggiveVideoElement;
        new (): HTMLBiggiveVideoElement;
    };
    interface HTMLBiggiveVideoFeatureElement extends Components.BiggiveVideoFeature, HTMLStencilElement {
    }
    var HTMLBiggiveVideoFeatureElement: {
        prototype: HTMLBiggiveVideoFeatureElement;
        new (): HTMLBiggiveVideoFeatureElement;
    };
    interface HTMLElementTagNameMap {
        "biggive-back-to-top": HTMLBiggiveBackToTopElement;
        "biggive-basic-card": HTMLBiggiveBasicCardElement;
        "biggive-beneficiary-icon": HTMLBiggiveBeneficiaryIconElement;
        "biggive-boxed-content": HTMLBiggiveBoxedContentElement;
        "biggive-branded-image": HTMLBiggiveBrandedImageElement;
        "biggive-button": HTMLBiggiveButtonElement;
        "biggive-call-to-action": HTMLBiggiveCallToActionElement;
        "biggive-campaign-card": HTMLBiggiveCampaignCardElement;
        "biggive-campaign-card-filter-grid": HTMLBiggiveCampaignCardFilterGridElement;
        "biggive-campaign-highlights": HTMLBiggiveCampaignHighlightsElement;
        "biggive-category-icon": HTMLBiggiveCategoryIconElement;
        "biggive-footer": HTMLBiggiveFooterElement;
        "biggive-form": HTMLBiggiveFormElement;
        "biggive-form-field-select": HTMLBiggiveFormFieldSelectElement;
        "biggive-formatted-text": HTMLBiggiveFormattedTextElement;
        "biggive-grid": HTMLBiggiveGridElement;
        "biggive-header": HTMLBiggiveHeaderElement;
        "biggive-heading": HTMLBiggiveHeadingElement;
        "biggive-hero-image": HTMLBiggiveHeroImageElement;
        "biggive-icon-group": HTMLBiggiveIconGroupElement;
        "biggive-image": HTMLBiggiveImageElement;
        "biggive-image-feature": HTMLBiggiveImageFeatureElement;
        "biggive-misc-icon": HTMLBiggiveMiscIconElement;
        "biggive-page-column": HTMLBiggivePageColumnElement;
        "biggive-page-columns": HTMLBiggivePageColumnsElement;
        "biggive-page-section": HTMLBiggivePageSectionElement;
        "biggive-progress-bar": HTMLBiggiveProgressBarElement;
        "biggive-quote": HTMLBiggiveQuoteElement;
        "biggive-search": HTMLBiggiveSearchElement;
        "biggive-social-icon": HTMLBiggiveSocialIconElement;
        "biggive-tab": HTMLBiggiveTabElement;
        "biggive-tabbed-content": HTMLBiggiveTabbedContentElement;
        "biggive-text-input": HTMLBiggiveTextInputElement;
        "biggive-totalizer": HTMLBiggiveTotalizerElement;
        "biggive-video": HTMLBiggiveVideoElement;
        "biggive-video-feature": HTMLBiggiveVideoFeatureElement;
    }
}
declare namespace LocalJSX {
    interface BiggiveBackToTop {
    }
    interface BiggiveBasicCard {
        /**
          * Full URL of the background image.
         */
        "backgroundColour"?: string;
        /**
          * Full URL of the background image.
         */
        "backgroundImageUrl"?: string;
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme"?: string;
        /**
          * Button label
         */
        "buttonLabel"?: string;
        /**
          * Button URL
         */
        "buttonUrl"?: string;
        /**
          * Icon colour
         */
        "iconColour"?: string;
        /**
          * Main title
         */
        "mainTitle"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Subtitle title
         */
        "subtitle"?: string;
    }
    interface BiggiveBeneficiaryIcon {
    }
    interface BiggiveBoxedContent {
        /**
          * Background colour
         */
        "backgroundColour"?: string;
        /**
          * Horizontal padding
         */
        "horizontalPadding"?: number;
        /**
          * Shadow
         */
        "shadow"?: boolean;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Vertical padding
         */
        "verticalPadding"?: number;
    }
    interface BiggiveBrandedImage {
        /**
          * Full URL of a image.
         */
        "imageUrl"?: string;
        /**
          * Full URL of the logo.
         */
        "logoUrl"?: string;
        /**
          * Slug
         */
        "slug"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveButton {
        /**
          * Colour Scheme
         */
        "colourScheme"?: string;
        /**
          * Display full width
         */
        "fullWidth"?: boolean;
        /**
          * Text
         */
        "label"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * URL
         */
        "url"?: string;
    }
    interface BiggiveCallToAction {
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Main title
         */
        "mainTitle"?: string;
        /**
          * Main title colour
         */
        "mainTitleColour"?: string;
        /**
          * Primary button Colour Scheme
         */
        "primaryButtonColourScheme"?: string;
        /**
          * Primary button Label
         */
        "primaryButtonLabel"?: string;
        /**
          * Primary button Url
         */
        "primaryButtonUrl"?: string;
        /**
          * Secondary button Colour Scheme
         */
        "secondaryButtonColourScheme"?: string;
        /**
          * Secondary button Label
         */
        "secondaryButtonLabel"?: string;
        /**
          * Secondary button Url
         */
        "secondaryButtonUrl"?: string;
        /**
          * Slug
         */
        "slug"?: string;
        /**
          * Slug colour
         */
        "slugColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Subtitle
         */
        "subtitle"?: string;
        /**
          * Subtitle colour
         */
        "subtitleColour"?: string;
        /**
          * Teaser
         */
        "teaser"?: string;
        /**
          * Teaser colour
         */
        "teaserColour"?: string;
    }
    interface BiggiveCampaignCard {
        /**
          * Full URL of a banner image.
         */
        "banner"?: string;
        /**
          * Display name of the charity's specific time-bound fundraising campaign.
         */
        "campaignTitle"?: string;
        /**
          * e.g. "Match Funded".
         */
        "campaignType"?: string;
        /**
          * e.g. 'GBP'.
         */
        "currencyCode"?: string;
        /**
          * Donate button colour scheme
         */
        "donateButtonColourScheme"?: string;
        /**
          * Donate button label
         */
        "donateButtonLabel"?: string;
        /**
          * Donate button url
         */
        "donateButtonUrl"?: string;
        /**
          * Donate button colour scheme
         */
        "moreInfoButtonColourScheme"?: string;
        /**
          * More information button label
         */
        "moreInfoButtonLabel"?: string;
        /**
          * More information button url
         */
        "moreInfoButtonUrl"?: string;
        /**
          * Display name of the charity or non-profit.
         */
        "organisationName"?: string;
        /**
          * Amount for the primary figure
         */
        "primaryFigureAmount"?: number;
        /**
          * Label for the primary figure
         */
        "primaryFigureLabel"?: string;
        /**
          * Progress bar percentage
         */
        "progressBarCounter"?: number;
        /**
          * Amount for the secondary figure
         */
        "secondaryFigureAmount"?: number;
        /**
          * Label for the secondary figure
         */
        "secondaryFigureLabel"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveCampaignCardFilterGrid {
        /**
          * Defines the text on the search button
         */
        "buttonText"?: string;
        /**
          * Intro
         */
        "intro"?: string;
        /**
          * This event `doTextSearch` event is emitted and propogates to the parent component which handles it
         */
        "onDoTextSearch"?: (event: BiggiveCampaignCardFilterGridCustomEvent<string>) => void;
        /**
          * Defines the text displayed as the placeholder in the input field before the user types anything
         */
        "placeholderText"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveCampaignHighlights {
        /**
          * e.g. 'GBP'.
         */
        "currencyCode"?: string;
        /**
          * Amount for the primary figure
         */
        "primaryFigureAmount"?: number;
        /**
          * Label for the primary figure
         */
        "primaryFigureLabel"?: string;
        /**
          * Primary stat icon
         */
        "primaryStatIcon"?: string;
        /**
          * Primary stat text
         */
        "primaryStatText"?: string;
        /**
          * Progress bar percentage
         */
        "progressBarCounter"?: number;
        /**
          * Amount for the secondary figure
         */
        "secondaryFigureAmount"?: number;
        /**
          * Label for the secondary figure
         */
        "secondaryFigureLabel"?: string;
        /**
          * Secondary stat icon
         */
        "secondaryStatIcon"?: string;
        /**
          * Secondary stat text
         */
        "secondaryStatText"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveCategoryIcon {
        /**
          * Background colour
         */
        "backgroundColour"?: string;
        /**
          * Icon
         */
        "icon"?: string;
        /**
          * Background colour
         */
        "iconColour"?: string;
        /**
          * Label
         */
        "label"?: string;
        /**
          * Url
         */
        "url"?: string;
    }
    interface BiggiveFooter {
    }
    interface BiggiveForm {
    }
    interface BiggiveFormFieldSelect {
    }
    interface BiggiveFormattedText {
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveGrid {
        /**
          * Number of columns in grid
         */
        "columnCount"?: number;
        /**
          * Gap between columns, based on spacer CSS variable
         */
        "columnGap"?: number;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveHeader {
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveHeading {
        /**
          * Colour Scheme
         */
        "colour"?: string;
        /**
          * HTML element
         */
        "htmlElement"?: string;
        /**
          * Heading size
         */
        "size"?: number;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Heading text
         */
        "text"?: string;
    }
    interface BiggiveHeroImage {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme"?: string;
        /**
          * Button Label
         */
        "buttonLabel"?: string;
        /**
          * Button Url
         */
        "buttonUrl"?: string;
        /**
          * Colour Scheme
         */
        "colourScheme"?: string;
        /**
          * Full URL of a logo image.
         */
        "logo"?: string;
        /**
          * Full URL of a main hero image.
         */
        "mainImage"?: string;
        /**
          * Hero image title, typically the page.
         */
        "mainTitle"?: string;
        /**
          * Main title colour
         */
        "mainTitleColour"?: string;
        /**
          * Header slug
         */
        "slug"?: string;
        /**
          * Header slug colour
         */
        "slugColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Introductory teaser text
         */
        "teaser"?: string;
        /**
          * Teaser colour
         */
        "teaserColour"?: string;
    }
    interface BiggiveIconGroup {
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveImage {
        /**
          * Full URL of a image.
         */
        "imageUrl"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveImageFeature {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme"?: string;
        /**
          * Button Label
         */
        "buttonLabel"?: string;
        /**
          * Button Url
         */
        "buttonUrl"?: string;
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Full URL of a image.
         */
        "imageUrl"?: string;
        /**
          * Video title
         */
        "mainTitle"?: string;
        /**
          * Slug colour
         */
        "mainTitleColour"?: string;
        /**
          * Slug
         */
        "slug"?: string;
        /**
          * Slug colour
         */
        "slugColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Introductory teaser text
         */
        "teaser"?: string;
        /**
          * Teaser colour
         */
        "teaserColour"?: string;
    }
    interface BiggiveMiscIcon {
        /**
          * Background colour
         */
        "backgroundColour"?: string;
        /**
          * Icon
         */
        "icon"?: string;
        /**
          * Background colour
         */
        "iconColour"?: string;
        /**
          * Url
         */
        "url"?: string;
    }
    interface BiggivePageColumn {
    }
    interface BiggivePageColumns {
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggivePageSection {
        /**
          * Colour scheme
         */
        "colourScheme"?: string;
        /**
          * Section style bottom
         */
        "sectionStyleBottom"?: string;
        /**
          * Section style top
         */
        "sectionStyleTop"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveProgressBar {
        /**
          * Colour Scheme
         */
        "colourScheme"?: string;
        /**
          * Text
         */
        "counter"?: number;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveQuote {
        /**
          * Attribution text
         */
        "attribution"?: string;
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Quote text
         */
        "quote"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveSearch {
        /**
          * Defines the text on the search button
         */
        "buttonText"?: string;
        /**
          * This event `doSearch` event is emitted and propogates to the parent component which handles it
         */
        "onDoSearch"?: (event: BiggiveSearchCustomEvent<string>) => void;
        /**
          * Defines the text displayed as the placeholder in the input field before the user types anything
         */
        "placeholderText"?: string;
    }
    interface BiggiveSocialIcon {
        /**
          * Background colour
         */
        "backgroundColour"?: string;
        /**
          * Background colour
         */
        "iconColour"?: string;
        /**
          * service
         */
        "service"?: string;
        /**
          * Url
         */
        "url"?: string;
    }
    interface BiggiveTab {
        /**
          * Title
         */
        "tabTitle"?: string;
    }
    interface BiggiveTabbedContent {
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
    }
    interface BiggiveTextInput {
    }
    interface BiggiveTotalizer {
        /**
          * e.g. 'GBP'.
         */
        "currencyCode"?: string;
        /**
          * Include GiftAid
         */
        "includingGiftAid"?: boolean;
        /**
          * Primary banner colour
         */
        "primaryColour"?: string;
        /**
          * Primary text colour
         */
        "primaryTextColour"?: string;
        /**
          * Secondary banner colour
         */
        "secondaryColour"?: string;
        /**
          * Secondary text colour
         */
        "secondaryTextColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Total match funds.
         */
        "totalMatchFunds"?: number;
        /**
          * Total raised.
         */
        "totalRaised"?: number;
    }
    interface BiggiveVideo {
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Full URL of a video.
         */
        "videoUrl"?: string;
    }
    interface BiggiveVideoFeature {
        /**
          * Button Colour Scheme
         */
        "buttonColourScheme"?: string;
        /**
          * Button Label
         */
        "buttonLabel"?: string;
        /**
          * Button Url
         */
        "buttonUrl"?: string;
        /**
          * Default text colour
         */
        "defaultTextColour"?: string;
        /**
          * Video title
         */
        "mainTitle"?: string;
        /**
          * Slug colour
         */
        "mainTitleColour"?: string;
        /**
          * Slug
         */
        "slug"?: string;
        /**
          * Slug colour
         */
        "slugColour"?: string;
        /**
          * Space below component
         */
        "spaceBelow"?: number;
        /**
          * Introductory teaser text
         */
        "teaser"?: string;
        /**
          * Teaser colour
         */
        "teaserColour"?: string;
        /**
          * Full URL of a video.
         */
        "videoUrl"?: string;
    }
    interface IntrinsicElements {
        "biggive-back-to-top": BiggiveBackToTop;
        "biggive-basic-card": BiggiveBasicCard;
        "biggive-beneficiary-icon": BiggiveBeneficiaryIcon;
        "biggive-boxed-content": BiggiveBoxedContent;
        "biggive-branded-image": BiggiveBrandedImage;
        "biggive-button": BiggiveButton;
        "biggive-call-to-action": BiggiveCallToAction;
        "biggive-campaign-card": BiggiveCampaignCard;
        "biggive-campaign-card-filter-grid": BiggiveCampaignCardFilterGrid;
        "biggive-campaign-highlights": BiggiveCampaignHighlights;
        "biggive-category-icon": BiggiveCategoryIcon;
        "biggive-footer": BiggiveFooter;
        "biggive-form": BiggiveForm;
        "biggive-form-field-select": BiggiveFormFieldSelect;
        "biggive-formatted-text": BiggiveFormattedText;
        "biggive-grid": BiggiveGrid;
        "biggive-header": BiggiveHeader;
        "biggive-heading": BiggiveHeading;
        "biggive-hero-image": BiggiveHeroImage;
        "biggive-icon-group": BiggiveIconGroup;
        "biggive-image": BiggiveImage;
        "biggive-image-feature": BiggiveImageFeature;
        "biggive-misc-icon": BiggiveMiscIcon;
        "biggive-page-column": BiggivePageColumn;
        "biggive-page-columns": BiggivePageColumns;
        "biggive-page-section": BiggivePageSection;
        "biggive-progress-bar": BiggiveProgressBar;
        "biggive-quote": BiggiveQuote;
        "biggive-search": BiggiveSearch;
        "biggive-social-icon": BiggiveSocialIcon;
        "biggive-tab": BiggiveTab;
        "biggive-tabbed-content": BiggiveTabbedContent;
        "biggive-text-input": BiggiveTextInput;
        "biggive-totalizer": BiggiveTotalizer;
        "biggive-video": BiggiveVideo;
        "biggive-video-feature": BiggiveVideoFeature;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "biggive-back-to-top": LocalJSX.BiggiveBackToTop & JSXBase.HTMLAttributes<HTMLBiggiveBackToTopElement>;
            "biggive-basic-card": LocalJSX.BiggiveBasicCard & JSXBase.HTMLAttributes<HTMLBiggiveBasicCardElement>;
            "biggive-beneficiary-icon": LocalJSX.BiggiveBeneficiaryIcon & JSXBase.HTMLAttributes<HTMLBiggiveBeneficiaryIconElement>;
            "biggive-boxed-content": LocalJSX.BiggiveBoxedContent & JSXBase.HTMLAttributes<HTMLBiggiveBoxedContentElement>;
            "biggive-branded-image": LocalJSX.BiggiveBrandedImage & JSXBase.HTMLAttributes<HTMLBiggiveBrandedImageElement>;
            "biggive-button": LocalJSX.BiggiveButton & JSXBase.HTMLAttributes<HTMLBiggiveButtonElement>;
            "biggive-call-to-action": LocalJSX.BiggiveCallToAction & JSXBase.HTMLAttributes<HTMLBiggiveCallToActionElement>;
            "biggive-campaign-card": LocalJSX.BiggiveCampaignCard & JSXBase.HTMLAttributes<HTMLBiggiveCampaignCardElement>;
            "biggive-campaign-card-filter-grid": LocalJSX.BiggiveCampaignCardFilterGrid & JSXBase.HTMLAttributes<HTMLBiggiveCampaignCardFilterGridElement>;
            "biggive-campaign-highlights": LocalJSX.BiggiveCampaignHighlights & JSXBase.HTMLAttributes<HTMLBiggiveCampaignHighlightsElement>;
            "biggive-category-icon": LocalJSX.BiggiveCategoryIcon & JSXBase.HTMLAttributes<HTMLBiggiveCategoryIconElement>;
            "biggive-footer": LocalJSX.BiggiveFooter & JSXBase.HTMLAttributes<HTMLBiggiveFooterElement>;
            "biggive-form": LocalJSX.BiggiveForm & JSXBase.HTMLAttributes<HTMLBiggiveFormElement>;
            "biggive-form-field-select": LocalJSX.BiggiveFormFieldSelect & JSXBase.HTMLAttributes<HTMLBiggiveFormFieldSelectElement>;
            "biggive-formatted-text": LocalJSX.BiggiveFormattedText & JSXBase.HTMLAttributes<HTMLBiggiveFormattedTextElement>;
            "biggive-grid": LocalJSX.BiggiveGrid & JSXBase.HTMLAttributes<HTMLBiggiveGridElement>;
            "biggive-header": LocalJSX.BiggiveHeader & JSXBase.HTMLAttributes<HTMLBiggiveHeaderElement>;
            "biggive-heading": LocalJSX.BiggiveHeading & JSXBase.HTMLAttributes<HTMLBiggiveHeadingElement>;
            "biggive-hero-image": LocalJSX.BiggiveHeroImage & JSXBase.HTMLAttributes<HTMLBiggiveHeroImageElement>;
            "biggive-icon-group": LocalJSX.BiggiveIconGroup & JSXBase.HTMLAttributes<HTMLBiggiveIconGroupElement>;
            "biggive-image": LocalJSX.BiggiveImage & JSXBase.HTMLAttributes<HTMLBiggiveImageElement>;
            "biggive-image-feature": LocalJSX.BiggiveImageFeature & JSXBase.HTMLAttributes<HTMLBiggiveImageFeatureElement>;
            "biggive-misc-icon": LocalJSX.BiggiveMiscIcon & JSXBase.HTMLAttributes<HTMLBiggiveMiscIconElement>;
            "biggive-page-column": LocalJSX.BiggivePageColumn & JSXBase.HTMLAttributes<HTMLBiggivePageColumnElement>;
            "biggive-page-columns": LocalJSX.BiggivePageColumns & JSXBase.HTMLAttributes<HTMLBiggivePageColumnsElement>;
            "biggive-page-section": LocalJSX.BiggivePageSection & JSXBase.HTMLAttributes<HTMLBiggivePageSectionElement>;
            "biggive-progress-bar": LocalJSX.BiggiveProgressBar & JSXBase.HTMLAttributes<HTMLBiggiveProgressBarElement>;
            "biggive-quote": LocalJSX.BiggiveQuote & JSXBase.HTMLAttributes<HTMLBiggiveQuoteElement>;
            "biggive-search": LocalJSX.BiggiveSearch & JSXBase.HTMLAttributes<HTMLBiggiveSearchElement>;
            "biggive-social-icon": LocalJSX.BiggiveSocialIcon & JSXBase.HTMLAttributes<HTMLBiggiveSocialIconElement>;
            "biggive-tab": LocalJSX.BiggiveTab & JSXBase.HTMLAttributes<HTMLBiggiveTabElement>;
            "biggive-tabbed-content": LocalJSX.BiggiveTabbedContent & JSXBase.HTMLAttributes<HTMLBiggiveTabbedContentElement>;
            "biggive-text-input": LocalJSX.BiggiveTextInput & JSXBase.HTMLAttributes<HTMLBiggiveTextInputElement>;
            "biggive-totalizer": LocalJSX.BiggiveTotalizer & JSXBase.HTMLAttributes<HTMLBiggiveTotalizerElement>;
            "biggive-video": LocalJSX.BiggiveVideo & JSXBase.HTMLAttributes<HTMLBiggiveVideoElement>;
            "biggive-video-feature": LocalJSX.BiggiveVideoFeature & JSXBase.HTMLAttributes<HTMLBiggiveVideoFeatureElement>;
        }
    }
}
