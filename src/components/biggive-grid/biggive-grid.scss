@include spacers();

:host {
  display: contents;
}

.grid {
  margin-bottom: $spacer-3;
  display: flex;
  flex-flow: row wrap;
}

.space-between {
  justify-content: space-between;
}

.grid ::slotted([slot=grid-item]) {
  display: block;
}

.column-count-2 ::slotted(*) {
  width: calc( 100% / 2 );
  @include flex-container-column();
}

.column-count-3 ::slotted(*) {
  width: calc( 100% / 3 );
  @include flex-container-column();
}

.column-count-4 ::slotted(*) {
  width: calc( 100% / 4 );
  @include flex-container-column();
}

.column-count-5 ::slotted(*) {
  width: calc( 100% / 5 );
  @include flex-container-column();
}

.column-count-6 ::slotted(*) {
  width: calc( 100% / 6 );
  @include flex-container-column();
}


.column-gap-1 { justify-content: space-between; }
.column-gap-2 { justify-content: space-between; }
.column-gap-3 { justify-content: space-between; }
.column-gap-4 { justify-content: space-between; }
.column-gap-5 { justify-content: space-between; }
.column-gap-6 { justify-content: space-between; }


.column-count-2.column-gap-1 ::slotted(*) { width: calc( 100% / 2 - (($spacer-1 * 1) / 2) );}
.column-count-2.column-gap-2 ::slotted(*) { width: calc( 100% / 2 - (($spacer-2 * 1) / 2) );}
.column-count-2.column-gap-3 ::slotted(*) { width: calc( 100% / 2 - (($spacer-3 * 1) / 2) );}
.column-count-2.column-gap-4 ::slotted(*) { width: calc( 100% / 2 - (($spacer-4 * 1) / 2) );}
.column-count-2.column-gap-5 ::slotted(*) { width: calc( 100% / 2 - (($spacer-5 * 1) / 2) );}
.column-count-2.column-gap-6 ::slotted(*) { width: calc( 100% / 2 - (($spacer-6 * 1) / 2) );}

.column-count-3.column-gap-1 ::slotted(*) { width: calc( 100% / 3 - (($spacer-1 * 2) / 3) );}
.column-count-3.column-gap-2 ::slotted(*) { width: calc( 100% / 3 - (($spacer-2 * 2) / 3) );}
.column-count-3.column-gap-3 ::slotted(*) { width: calc( 100% / 3 - (($spacer-3 * 2) / 3) );}
.column-count-3.column-gap-4 ::slotted(*) { width: calc( 100% / 3 - (($spacer-4 * 2) / 3) );}
.column-count-3.column-gap-5 ::slotted(*) { width: calc( 100% / 3 - (($spacer-5 * 2) / 3) );}
.column-count-3.column-gap-6 ::slotted(*) { width: calc( 100% / 3 - (($spacer-6 * 2) / 3) );}

.column-count-4.column-gap-1 ::slotted(*) { width: calc( 100% / 4 - (($spacer-1 * 3) / 4) );}
.column-count-4.column-gap-2 ::slotted(*) { width: calc( 100% / 4 - (($spacer-2 * 3) / 4) );}
.column-count-4.column-gap-3 ::slotted(*) { width: calc( 100% / 4 - (($spacer-3 * 3) / 4) );}
.column-count-4.column-gap-4 ::slotted(*) { width: calc( 100% / 4 - (($spacer-4 * 3) / 4) );}
.column-count-4.column-gap-5 ::slotted(*) { width: calc( 100% / 4 - (($spacer-5 * 3) / 4) );}
.column-count-4.column-gap-6 ::slotted(*) { width: calc( 100% / 4 - (($spacer-6 * 3) / 4) );}

.column-count-5.column-gap-1 ::slotted(*) { width: calc( 100% / 5 - (($spacer-1 * 4) / 5) );}
.column-count-5.column-gap-2 ::slotted(*) { width: calc( 100% / 5 - (($spacer-2 * 4) / 5) );}
.column-count-5.column-gap-3 ::slotted(*) { width: calc( 100% / 5 - (($spacer-3 * 4) / 5) );}
.column-count-5.column-gap-4 ::slotted(*) { width: calc( 100% / 5 - (($spacer-4 * 4) / 5) );}
.column-count-5.column-gap-5 ::slotted(*) { width: calc( 100% / 5 - (($spacer-5 * 4) / 5) );}
.column-count-5.column-gap-6 ::slotted(*) { width: calc( 100% / 5 - (($spacer-6 * 4) / 5) );}

.column-count-6.column-gap-1 ::slotted(*) { width: calc( 100% / 6 - (($spacer-1 * 5) / 6) );}
.column-count-6.column-gap-2 ::slotted(*) { width: calc( 100% / 6 - (($spacer-2 * 5) / 6) );}
.column-count-6.column-gap-3 ::slotted(*) { width: calc( 100% / 6 - (($spacer-3 * 5) / 6) );}
.column-count-6.column-gap-4 ::slotted(*) { width: calc( 100% / 6 - (($spacer-4 * 5) / 6) );}
.column-count-6.column-gap-5 ::slotted(*) { width: calc( 100% / 6 - (($spacer-5 * 5) / 6) );}
.column-count-6.column-gap-6 ::slotted(*) { width: calc( 100% / 6 - (($spacer-6 * 5) / 6) );}

.column-count-3.column-gap-1:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-1 * 2) / 3) );}
.column-count-3.column-gap-2:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-2 * 2) / 3) );}
.column-count-3.column-gap-3:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-3 * 2) / 3) );}
.column-count-3.column-gap-4:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-4 * 2) / 3) );}
.column-count-3.column-gap-5:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-5 * 2) / 3) );}
.column-count-3.column-gap-6:after { content: ""; @include flex-container-column(); width: calc( 100% / 3 - (($spacer-6 * 2) / 3) );}




@media screen and (max-width: $screen-tablet-max) {

  @for $i from 1 through 6 {
    .column-count-#{$i}  ::slotted(*) { width: calc( 51% - (($spacer-4 * 1) / 2)) };
    @for $j from 1 through 6 {
      .column-count-#{$i}.column-gap-#{$j} ::slotted(*) { width: calc( 50% - (($spacer-4 * 1) / 2)) };
    }
  }

}

@media screen and (max-width: $screen-mobile-max) {
  @for $i from 1 through 6 {
    .column-count-#{$i}  ::slotted(*) { width: 100%; };
    @for $j from 1 through 6 {
      .column-count-#{$i}.column-gap-#{$j}  ::slotted(*) { width: 100%; };
    }
  }
}
